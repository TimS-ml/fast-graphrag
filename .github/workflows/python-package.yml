# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ruff
        pipx install poetry
        poetry lock
        poetry install
    - name: Lint with ruff
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        ruff check . --select E9,F63,F7,F82 --show-files

        # Check with the same settings as the dev environment
        ruff check . --select E,W,F,I,B,C4,N,D --ignore C901,W191,D401 --show-files
        
        # Treat all errors as warnings with max line length and complexity constraints
        ruff check . --exit-zero --line-length 127 --select C901
    - name: Test with unittest
      run: |
        poetry run python -m unittest discover -s tests/ -p "*_test.py"
